{"ast":null,"code":"import _slicedToArray from \"/Users/julian/Documents/Projects/2d-test/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/julian/Documents/Projects/2d-test/src/characters/Protagonist.js\";\nimport React, { useState, useEffect } from 'react';\nimport prot from '../assets/sprites/prot.png';\nimport { Sprite } from 'react-konva';\nexport default (props => {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        image = _useState2[0],\n        setImage = _useState2[1];\n\n  const sprite = React.createRef();\n\n  const _useState3 = useState(props.x),\n        _useState4 = _slicedToArray(_useState3, 2),\n        x = _useState4[0],\n        setX = _useState4[1];\n\n  useEffect(() => {\n    const img = new window.Image();\n    img.src = prot;\n\n    img.onload = () => {\n      setImage(img);\n    };\n\n    if (sprite.current) {\n      sprite.current.start();\n    }\n  });\n  const animations = {\n    idle: [//  x  y  w   h\n    0, 3, 30, 40, 30, 3, 30, 40, 60, 3, 30, 40, 90, 3, 30, 40, 120, 3, 30, 40],\n    punch: [160, 3, 30, 40, 190, 3, 30, 40, 220, 3, 30, 40]\n  };\n  if (image) console.log(image.height * 5);\n  return React.createElement(Sprite, {\n    ref: sprite,\n    x: x,\n    y: image ? props.y - image.height * 5 : 0,\n    scaleX: 5,\n    scaleY: 6,\n    image: image,\n    animation: \"idle\",\n    animations: animations,\n    frameRate: 5,\n    frameIndex: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  });\n});","map":{"version":3,"sources":["/Users/julian/Documents/Projects/2d-test/src/characters/Protagonist.js"],"names":["React","useState","useEffect","prot","Sprite","props","image","setImage","sprite","createRef","x","setX","img","window","Image","src","onload","current","start","animations","idle","punch","console","log","height","y"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,4BAAjB;AACA,SAASC,MAAT,QAAuB,aAAvB;AAEA,gBAAeC,KAAK,IAAI;AAAA,oBACMJ,QAAQ,CAAC,IAAD,CADd;AAAA;AAAA,QACbK,KADa;AAAA,QACNC,QADM;;AAEpB,QAAMC,MAAM,GAAGR,KAAK,CAACS,SAAN,EAAf;;AAFoB,qBAIFR,QAAQ,CAACI,KAAK,CAACK,CAAP,CAJN;AAAA;AAAA,QAIbA,CAJa;AAAA,QAIVC,IAJU;;AAMpBT,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMU,GAAG,GAAG,IAAIC,MAAM,CAACC,KAAX,EAAZ;AACAF,IAAAA,GAAG,CAACG,GAAJ,GAAUZ,IAAV;;AACAS,IAAAA,GAAG,CAACI,MAAJ,GAAa,MAAM;AACfT,MAAAA,QAAQ,CAACK,GAAD,CAAR;AACH,KAFD;;AAGA,QAAIJ,MAAM,CAACS,OAAX,EAAoB;AAChBT,MAAAA,MAAM,CAACS,OAAP,CAAeC,KAAf;AACH;AACJ,GATQ,CAAT;AAUA,QAAMC,UAAU,GAAG;AACfC,IAAAA,IAAI,EAAE,CACF;AACA,KAFE,EAEC,CAFD,EAEI,EAFJ,EAEQ,EAFR,EAGF,EAHE,EAGE,CAHF,EAGK,EAHL,EAGS,EAHT,EAIF,EAJE,EAIE,CAJF,EAIK,EAJL,EAIS,EAJT,EAKF,EALE,EAKE,CALF,EAKK,EALL,EAKS,EALT,EAMF,GANE,EAMG,CANH,EAMM,EANN,EAMU,EANV,CADS;AASfC,IAAAA,KAAK,EAAE,CACH,GADG,EACE,CADF,EACK,EADL,EACS,EADT,EAEH,GAFG,EAEE,CAFF,EAEK,EAFL,EAES,EAFT,EAGH,GAHG,EAGE,CAHF,EAGK,EAHL,EAGS,EAHT;AATQ,GAAnB;AAgBA,MAAIf,KAAJ,EAAWgB,OAAO,CAACC,GAAR,CAAYjB,KAAK,CAACkB,MAAN,GAAe,CAA3B;AAEX,SAAO,oBAAC,MAAD;AACH,IAAA,GAAG,EAAEhB,MADF;AAEH,IAAA,CAAC,EAAEE,CAFA;AAGH,IAAA,CAAC,EAAEJ,KAAK,GAAGD,KAAK,CAACoB,CAAN,GAAWnB,KAAK,CAACkB,MAAN,GAAe,CAA7B,GAAkC,CAHvC;AAIH,IAAA,MAAM,EAAE,CAJL;AAKH,IAAA,MAAM,EAAE,CALL;AAMH,IAAA,KAAK,EAAElB,KANJ;AAOH,IAAA,SAAS,EAAC,MAPP;AAQH,IAAA,UAAU,EAAEa,UART;AASH,IAAA,SAAS,EAAE,CATR;AAUH,IAAA,UAAU,EAAE,CAVT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAaH,CA/CD","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport prot from '../assets/sprites/prot.png'\nimport { Sprite } from 'react-konva';\n\nexport default props => {\n    const [image, setImage] = useState(null);\n    const sprite = React.createRef();\n\n    const [x, setX] = useState(props.x);\n\n    useEffect(() => {\n        const img = new window.Image();\n        img.src = prot\n        img.onload = () => {\n            setImage(img)\n        }\n        if (sprite.current) {\n            sprite.current.start();\n        }\n    })\n    const animations = {\n        idle: [\n            //  x  y  w   h\n            0, 3, 30, 40,\n            30, 3, 30, 40,\n            60, 3, 30, 40,\n            90, 3, 30, 40,\n            120, 3, 30, 40\n        ],\n        punch: [\n            160, 3, 30, 40,\n            190, 3, 30, 40,\n            220, 3, 30, 40\n        ]\n    }\n\n    if (image) console.log(image.height * 5)\n\n    return <Sprite\n        ref={sprite}\n        x={x}\n        y={image ? props.y - (image.height * 5) : 0}\n        scaleX={5}\n        scaleY={6}\n        image={image}\n        animation='idle'\n        animations={animations}\n        frameRate={5}\n        frameIndex={0}\n    />\n\n}"]},"metadata":{},"sourceType":"module"}